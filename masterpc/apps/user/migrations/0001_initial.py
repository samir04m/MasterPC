# Generated by Django 3.0.6 on 2020-05-27 04:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pc', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Pc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='PC name')),
                ('budget', models.IntegerField(blank=True, null=True, verbose_name='Budget')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='Create at')),
            ],
            options={
                'verbose_name': 'PC',
                'verbose_name_plural': 'PCs',
            },
        ),
        migrations.CreateModel(
            name='Pc_storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Storage')),
            ],
            options={
                'verbose_name': 'PC Storage',
                'verbose_name_plural': 'PC Storages',
                'ordering': ['storage'],
            },
        ),
        migrations.CreateModel(
            name='Pc_ram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
                ('ram', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Ram')),
            ],
            options={
                'verbose_name': 'PC RAM',
                'verbose_name_plural': 'PC RAMs',
                'ordering': ['ram'],
            },
        ),
        migrations.CreateModel(
            name='Pc_psu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
                ('psu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Psu')),
            ],
            options={
                'verbose_name': 'PC PSU',
                'verbose_name_plural': 'PC PSUs',
                'ordering': ['psu'],
            },
        ),
        migrations.CreateModel(
            name='Pc_gpu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Gpu')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
            ],
            options={
                'verbose_name': 'PC GPU',
                'verbose_name_plural': 'PC GPUs',
                'ordering': ['gpu'],
            },
        ),
        migrations.CreateModel(
            name='Pc_cpu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Cpu')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
            ],
            options={
                'verbose_name': 'PC CPU',
                'verbose_name_plural': 'PC CPUs',
                'ordering': ['cpu'],
            },
        ),
        migrations.CreateModel(
            name='Pc_case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Case')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
            ],
            options={
                'verbose_name': 'PC Case',
                'verbose_name_plural': 'PC Cases',
                'ordering': ['case'],
            },
        ),
        migrations.CreateModel(
            name='Pc_board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pc.Board')),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Pc')),
            ],
            options={
                'verbose_name': 'PC Board',
                'verbose_name_plural': 'PC Boards',
                'ordering': ['board'],
            },
        ),
        migrations.AddField(
            model_name='pc',
            name='board',
            field=models.ManyToManyField(through='user.Pc_board', to='pc.Board'),
        ),
        migrations.AddField(
            model_name='pc',
            name='case',
            field=models.ManyToManyField(through='user.Pc_case', to='pc.Case'),
        ),
        migrations.AddField(
            model_name='pc',
            name='cpu',
            field=models.ManyToManyField(through='user.Pc_cpu', to='pc.Cpu'),
        ),
        migrations.AddField(
            model_name='pc',
            name='gpu',
            field=models.ManyToManyField(through='user.Pc_gpu', to='pc.Gpu'),
        ),
        migrations.AddField(
            model_name='pc',
            name='psu',
            field=models.ManyToManyField(through='user.Pc_psu', to='pc.Psu'),
        ),
        migrations.AddField(
            model_name='pc',
            name='ram',
            field=models.ManyToManyField(through='user.Pc_ram', to='pc.Ram'),
        ),
        migrations.AddField(
            model_name='pc',
            name='storage',
            field=models.ManyToManyField(through='user.Pc_storage', to='pc.Storage'),
        ),
        migrations.AddField(
            model_name='pc',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pcs', to=settings.AUTH_USER_MODEL),
        ),
    ]
